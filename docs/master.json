{"meta":{"generator":"0.11.1","format":20,"date":1686204123011},"custom":{"general":{"name":"General","files":{"welcome":{"name":"Welcome","type":"md","content":"# Cosmicord.js\r\nCosmicord.js is a nodejs library that functions as a Lavalink client, providing low-latency audio streaming for developers who want to create high-quality audio applications\r\n","path":"README.md"}}}},"classes":[{"name":"Cosmicord","construct":{"name":"Cosmicord","description":"Creates a new cosmicord client.","params":[{"name":"options","description":"The options for the cosmicord client.","type":[[["CosmiOptions"]]]}]},"props":[{"name":"nodes","description":"The nodes for the cosmicord client.","type":[[["Array","<"],["CosmiNode",">"]]],"meta":{"line":14,"file":"Cosmicord.js","path":"dist/lib"}},{"name":"clientId","description":"The client id","type":[[["string"]]],"meta":{"line":19,"file":"Cosmicord.js","path":"dist/lib"}},{"name":"players","description":"The players for the cosmicord client.","type":[[["Collection","<"],["string",", "],["CosmiPlayer",">"]]],"meta":{"line":24,"file":"Cosmicord.js","path":"dist/lib"}}],"methods":[{"name":"init","description":"Initializes the cosmicord client.","params":[{"name":"clientId","description":"The client id.","type":[[["string"]]]}],"async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":45,"file":"Cosmicord.js","path":"dist/lib"}},{"name":"search","description":"Searches a track.","params":[{"name":"query","description":"The query to search for.","type":[[["CosmiSearchQuery"]]]},{"name":"requesterId","description":"The requester id.","type":[[["string"]]]}],"async":true,"returns":[[["Promise","<"],["CosmiLoadedTracks",">"]]],"meta":{"line":62,"file":"Cosmicord.js","path":"dist/lib"}},{"name":"createNode","description":"Creates a new node.","params":[{"name":"options","description":"The options for the node.","type":[[["CosmiNodeOptions"]]]}],"returns":[[["CosmiNode"]]],"meta":{"line":88,"file":"Cosmicord.js","path":"dist/lib"}},{"name":"destoryNode","description":"Destroys a node.","params":[{"name":"node","description":"The node to destroy.","type":[[["CosmiNode"]]]}],"returns":[[["void"]]],"meta":{"line":98,"file":"Cosmicord.js","path":"dist/lib"}},{"name":"createPlayer","description":"Creates a new player.","params":[{"name":"options","description":"The options for the player.","type":[[["CosmiPlayerOptions"]]]},{"name":"node","description":"The node to create the player on.","type":[[["CosmiNode"]]]}],"returns":[[["CosmiPlayer"]]],"meta":{"line":107,"file":"Cosmicord.js","path":"dist/lib"}},{"name":"destroyPlayer","description":"Destroys a player.","params":[{"name":"guildId","description":"The guild id of the player.","type":[[["string"]]]}],"returns":[[["void"]]],"meta":{"line":123,"file":"Cosmicord.js","path":"dist/lib"}},{"name":"getLeastUsedNode","description":"Get the least used node.","returns":[[["CosmiNode"]]],"meta":{"line":133,"file":"Cosmicord.js","path":"dist/lib"}},{"name":"updateVoiceState","description":"Updates the voice state from a discord voice packet.","params":[{"name":"data","description":"The data to update the voice state with.","type":[[["VoicePacket"]],[["VoiceServer"]],[["VoiceState"]]]}],"async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":145,"file":"Cosmicord.js","path":"dist/lib"}}],"meta":{"line":29,"file":"Cosmicord.js","path":"dist/lib"}},{"name":"CosmiNode","construct":{"name":"CosmiNode","description":"Creates a new Node instance","params":[{"name":"manager","description":"The manager for the node.","type":[[["Cosmicord"]]]},{"name":"options","description":"The options for the node.","type":[[["CosmiNodeOptions"]]]}]},"props":[{"name":"host","description":"The host for the node.","type":[[["string"]]],"meta":{"line":11,"file":"CosmiNode.js","path":"dist/lib"}},{"name":"port","description":"The port for the node.","type":[[["number"]]],"meta":{"line":17,"file":"CosmiNode.js","path":"dist/lib"}},{"name":"password","description":"The password for the node.","type":[[["string"]]],"meta":{"line":23,"file":"CosmiNode.js","path":"dist/lib"}},{"name":"secure","description":"Whether the host uses SSL.","type":[[["boolean"]]],"meta":{"line":29,"file":"CosmiNode.js","path":"dist/lib"}},{"name":"identifier","description":"The identifier for the node.","type":[[["string"]]],"meta":{"line":35,"file":"CosmiNode.js","path":"dist/lib"}},{"name":"retryAmount","description":"The retryAmount for the node.","type":[[["number"]]],"meta":{"line":41,"file":"CosmiNode.js","path":"dist/lib"}},{"name":"retries","description":"The amount of retries for the node.","type":[[["number"]]],"meta":{"line":47,"file":"CosmiNode.js","path":"dist/lib"}},{"name":"retryDelay","description":"The retryDelay for the node.","type":[[["number"]]],"meta":{"line":53,"file":"CosmiNode.js","path":"dist/lib"}},{"name":"requestTimeout","description":"The timeout used for api calls","type":[[["number"]]],"meta":{"line":59,"file":"CosmiNode.js","path":"dist/lib"}},{"name":"connected","description":"Whether the node is connected or not.","type":[[["boolean"]]],"meta":{"line":65,"file":"CosmiNode.js","path":"dist/lib"}},{"name":"stats","description":"The stats for the node.","type":[[["NodeStats"]]],"meta":{"line":70,"file":"CosmiNode.js","path":"dist/lib"}},{"name":"calls","description":"The amount of public calls made to the node.","type":[[["number"]]],"meta":{"line":91,"file":"CosmiNode.js","path":"dist/lib"}},{"name":"socket","description":"Websocket for the node.","type":[[["CosmiSocket"]]],"meta":{"line":96,"file":"CosmiNode.js","path":"dist/lib"}},{"name":"version","description":"Lavalink version for the node.","type":[[["string"]]],"meta":{"line":101,"file":"CosmiNode.js","path":"dist/lib"}},{"name":"rest","description":"The rest for the node.","type":[[["CosmiREST"]]],"meta":{"line":106,"file":"CosmiNode.js","path":"dist/lib"}},{"name":"manager","description":"The manager for the node.","type":[[["Cosmicord"]]],"meta":{"line":111,"file":"CosmiNode.js","path":"dist/lib"}},{"name":"players","description":"The players in the node.","type":[[["Collection","<"],["string",", "],["CosmiPlayer",">"]]],"meta":{"line":116,"file":"CosmiNode.js","path":"dist/lib"}},{"name":"clientId","description":"The client id for the node.","type":[[["string"]]],"meta":{"line":121,"file":"CosmiNode.js","path":"dist/lib"}},{"name":"isReady","description":"Whether the node is ready or not.","type":[[["boolean"]]],"meta":{"line":127,"file":"CosmiNode.js","path":"dist/lib"}},{"name":"url","description":"The url for the node.","type":[[["string"]]],"meta":{"line":173,"file":"CosmiNode.js","path":"dist/lib"}}],"methods":[{"name":"connectSocket","description":"Connect the socket to the node.","returns":{"types":[[["Promise","<"],["boolean",">"]]],"description":"Whether the node connected or not."},"meta":{"line":151,"file":"CosmiNode.js","path":"dist/lib"}},{"name":"connect","description":"Connect the socket to the node.","returns":{"types":[[["Promise","<"],["boolean",">"]]],"description":"Whether the node connected or not."},"meta":{"line":180,"file":"CosmiNode.js","path":"dist/lib"}},{"name":"destroy","description":"Destroy the node.","returns":[[["void"]]],"meta":{"line":209,"file":"CosmiNode.js","path":"dist/lib"}},{"name":"reconnect","description":"Reconnect the node.","returns":{"types":[[["Promise","<"],["boolean",">"]]],"description":"Whether the node reconnected or not."},"meta":{"line":223,"file":"CosmiNode.js","path":"dist/lib"}}],"meta":{"line":133,"file":"CosmiNode.js","path":"dist/lib"}},{"name":"CosmiPlayer","construct":{"name":"CosmiPlayer","description":"Creates a new player","params":[{"name":"node","description":"The node the player is connected to","type":[[["CosmiNode"]]]},{"name":"options","description":"The options for the player","type":[[["CosmiPlayerOptions"]]]}]},"props":[{"name":"guildId","description":"The guild id where the player is created","type":[[["string"]]],"meta":{"line":14,"file":"CosmiPlayer.js","path":"dist/lib"}},{"name":"paused","description":"If the player is paused or not","type":[[["boolean"]]],"meta":{"line":20,"file":"CosmiPlayer.js","path":"dist/lib"}},{"name":"loop","description":"Whether loop is enabled or not","type":[[["boolean"]]],"meta":{"line":26,"file":"CosmiPlayer.js","path":"dist/lib"}},{"name":"playing","description":"If the player is playing or not","type":[[["boolean"]]],"meta":{"line":32,"file":"CosmiPlayer.js","path":"dist/lib"}},{"name":"queue","description":"The queue of the player","type":[[["CosmiQueue"]]],"meta":{"line":37,"file":"CosmiPlayer.js","path":"dist/lib"}},{"name":"position","description":"The position of the player","type":[[["number"]]],"meta":{"line":42,"file":"CosmiPlayer.js","path":"dist/lib"}},{"name":"voiceState","description":"The voice state of the player","type":[[["VoiceState"]]],"meta":{"line":47,"file":"CosmiPlayer.js","path":"dist/lib"}},{"name":"sessionId","description":"The session id","type":[[["string"]]],"meta":{"line":52,"file":"CosmiPlayer.js","path":"dist/lib"}},{"name":"voiceChannel","description":"The voice channel the player is connected to","type":[[["string"]]],"meta":{"line":57,"file":"CosmiPlayer.js","path":"dist/lib"}},{"name":"textChannel","description":"The text channel the player is using","type":[[["string"]]],"meta":{"line":62,"file":"CosmiPlayer.js","path":"dist/lib"}},{"name":"selfMute","description":"Whether the player is self muted or not","type":[[["boolean"]]],"meta":{"line":67,"file":"CosmiPlayer.js","path":"dist/lib"}},{"name":"selfDeaf","description":"Whether the player is self deafened or not","type":[[["boolean"]]],"meta":{"line":72,"file":"CosmiPlayer.js","path":"dist/lib"}},{"name":"volume","description":"The volume of the player","type":[[["number"]]],"meta":{"line":78,"file":"CosmiPlayer.js","path":"dist/lib"}},{"name":"state","description":"The state of the player","type":[[["PlayerState"]]],"meta":{"line":83,"file":"CosmiPlayer.js","path":"dist/lib"}},{"name":"filters","description":"The filters of the player","type":[[["Filters"]]],"meta":{"line":88,"file":"CosmiPlayer.js","path":"dist/lib"}}],"methods":[{"name":"connect","description":"Connects the player to the voice channel","async":true,"returns":[[["Promise","<"],["CosmiPlayer",">"]]],"meta":{"line":119,"file":"CosmiPlayer.js","path":"dist/lib"}},{"name":"destroy","description":"Destroys the player","params":[{"name":"disconnect","description":"Whether to disconnect the player or not","default":true,"type":[[["boolean"]]]}],"returns":[[["void"]]],"meta":{"line":140,"file":"CosmiPlayer.js","path":"dist/lib"}},{"name":"disconnect","description":"Disconnects the player from the voice channel","returns":[[["CosmiPlayer"]]],"meta":{"line":157,"file":"CosmiPlayer.js","path":"dist/lib"}},{"name":"pause","description":"Pauses the player","params":[{"name":"pause","description":"Whether to pause the player or not","type":[[["boolean"]]]}],"returns":[[["CosmiPlayer"]]],"meta":{"line":180,"file":"CosmiPlayer.js","path":"dist/lib"}},{"name":"play","description":"Plays the first track in the queue","async":true,"returns":[[["Promise","<"],["CosmiPlayer",">"]]],"meta":{"line":198,"file":"CosmiPlayer.js","path":"dist/lib"}},{"name":"setVoiceChannel","description":"Sets the voice channel of the player","params":[{"name":"channel","description":"The voice channel id to set","type":[[["string"]]]}],"returns":[[["CosmiPlayer"]]],"meta":{"line":223,"file":"CosmiPlayer.js","path":"dist/lib"}},{"name":"setTextChannel","description":"Sets the text channel of the player","params":[{"name":"channel","description":"The text channel id to set","type":[[["string"]]]}],"returns":[[["CosmiPlayer"]]],"meta":{"line":235,"file":"CosmiPlayer.js","path":"dist/lib"}},{"name":"setVolume","description":"Sets the volume of the player","params":[{"name":"volume","description":"The volume to set","type":[[["number"]]]}],"returns":[[["CosmiPlayer"]]],"meta":{"line":246,"file":"CosmiPlayer.js","path":"dist/lib"}},{"name":"setLoop","description":"Sets the loop","params":[{"name":"loop","description":"Whether to loop or not","type":[[["boolean"]]]}],"returns":[[["CosmiPlayer"]]],"meta":{"line":263,"file":"CosmiPlayer.js","path":"dist/lib"}},{"name":"stop","description":"Stops the current track.","params":[{"name":"amount","description":"The amount of tracks to skip.","type":[[["number"]]]}],"returns":[[["CosmiPlayer"]]],"meta":{"line":274,"file":"CosmiPlayer.js","path":"dist/lib"}},{"name":"seek","description":"Seeks to a position in the current track.","params":[{"name":"position","description":"The position to seek to.","type":[[["number"]]]}],"returns":[[["CosmiPlayer"]]],"meta":{"line":291,"file":"CosmiPlayer.js","path":"dist/lib"}}],"meta":{"line":94,"file":"CosmiPlayer.js","path":"dist/lib"}},{"name":"CosmiREST","construct":{"name":"CosmiREST","description":"Creates a new RestAPI instance","params":[{"name":"node","description":"The cosminode","type":[[["CosmiNode"]]]},{"name":"baseURL","description":"The base URL of the REST API","type":[[["string"]]]},{"name":"timeout","description":"The timeout for requests","type":[[["number"]]]}]},"props":[{"name":"baseURL","description":"The base URL of the REST API","type":[[["string"]]],"meta":{"line":11,"file":"CosmiRest.js","path":"dist/lib"}},{"name":"node","description":"The lavalink node","type":[[["CosmiNode"]]],"meta":{"line":16,"file":"CosmiRest.js","path":"dist/lib"}},{"name":"timeout","description":"The timeout for requests","type":[[["number"]]],"meta":{"line":21,"file":"CosmiRest.js","path":"dist/lib"}}],"methods":[{"name":"setBaseURL","description":"Sets the base URL of the REST API","params":[{"name":"baseURL","description":"The base URL of the REST API","type":[[["string"]]]}],"returns":[[["void"]]],"meta":{"line":38,"file":"CosmiRest.js","path":"dist/lib"}},{"name":"get","description":"Sends a GET request to the REST API","params":[{"name":"endpoint","description":"The endpoint to send the request to","type":[[["string"]]]}],"async":true,"returns":{"types":[[["any"]]],"description":"The response"},"meta":{"line":46,"file":"CosmiRest.js","path":"dist/lib"}},{"name":"post","description":"Sends a POST request to the REST API","params":[{"name":"endpoint","description":"The endpoint to send the request to","type":[[["string"]]]},{"name":"body","description":"The body to send","type":[[["BodyInit"]]]}],"async":true,"returns":{"types":[[["any"]]],"description":"The response"},"meta":{"line":55,"file":"CosmiRest.js","path":"dist/lib"}},{"name":"put","description":"Sends a PUT request to the REST API","params":[{"name":"endpoint","description":"The endpoint to send the request to","type":[[["string"]]]},{"name":"body","description":"The body to send","type":[[["BodyInit"]]]}],"async":true,"returns":{"types":[[["any"]]],"description":"The response"},"meta":{"line":64,"file":"CosmiRest.js","path":"dist/lib"}},{"name":"delete","description":"Sends a DELETE request to the REST API","params":[{"name":"endpoint","description":"The endpoint to send the request to","type":[[["string"]]]}],"async":true,"returns":{"types":[[["any"]]],"description":"The response"},"meta":{"line":72,"file":"CosmiRest.js","path":"dist/lib"}},{"name":"patch","description":"Sends a PATCH request to the REST API","params":[{"name":"endpoint","description":"The endpoint to send the request to","type":[[["string"]]]},{"name":"body","description":"The body to send","type":[[["BodyInit"]]]}],"async":true,"returns":{"types":[[["any"]]],"description":"The response"},"meta":{"line":81,"file":"CosmiRest.js","path":"dist/lib"}},{"name":"request","description":"Sends a request to the REST API","params":[{"name":"method","description":"The method to use","type":[[["string"]]]},{"name":"endpoint","description":"The endpoint to send the request to","type":[[["string"]]]},{"name":"body","description":"The body to send","type":[[["BodyInit"]]]},{"name":"text","description":"Whether to return the response as text","default":false,"type":[[["boolean"]]]}],"async":true,"returns":{"types":[[["any"]]],"description":"The response"},"meta":{"line":92,"file":"CosmiRest.js","path":"dist/lib"}},{"name":"isError","description":"Checks if the response is an error","params":[{"name":"res","description":"The response","type":[[["any"]]]}],"returns":{"types":[[["boolean"]]],"description":"Whether the response is an error"},"meta":{"line":113,"file":"CosmiRest.js","path":"dist/lib"}},{"name":"getPlayersFromSession","description":"Get all the players from a session","params":[{"name":"sessionId","description":"The session to get the players from","type":[[["string"]]]},{"name":"trace","description":"Whether to include the trace","default":false,"type":[[["boolean"]]]}],"async":true,"returns":{"types":[[["Array","<"],["RestPlayer",">"]]],"description":"The players"},"meta":{"line":122,"file":"CosmiRest.js","path":"dist/lib"}},{"name":"getPlayer","description":"Returns the player for this guild in this session.","params":[{"name":"sessionId","description":"The session to get the player from","type":[[["string"]]]},{"name":"guildId","description":"The guild id of the player","type":[[["string"]]]},{"name":"trace","description":"Whether to include the trace","default":false,"type":[[["boolean"]]]}],"async":true,"returns":{"types":[[["RestPlayer"]]],"description":"The player"},"meta":{"line":135,"file":"CosmiRest.js","path":"dist/lib"}},{"name":"updatePlayer","description":"Updates or creates the player for this guild if it doesn't already exist.","params":[{"name":"sessionId","description":"The session to update the player from","type":[[["string"]]]},{"name":"guildId","description":"The guild id of the player","type":[[["string"]]]},{"name":"options","description":"The options to update the player with","type":[[["RestPlayerUpdate"]]]},{"name":"noReplace","description":"Whether to replace the player or not","default":false,"type":[[["boolean"]]]},{"name":"trace","description":"Whether to include the trace","default":false,"type":[[["boolean"]]]}],"async":true,"returns":{"types":[[["RestPlayer"]]],"description":"The player"},"meta":{"line":150,"file":"CosmiRest.js","path":"dist/lib"}},{"name":"deletePlayer","description":"Deletes the player for this guild.","params":[{"name":"sessionId","description":"The session to delete the player from","type":[[["string"]]]},{"name":"guildId","description":"The guild id of the player","type":[[["string"]]]},{"name":"trace","description":"Whether to include the trace","default":false,"type":[[["boolean"]]]}],"async":true,"returns":[[["void"]]],"meta":{"line":163,"file":"CosmiRest.js","path":"dist/lib"}},{"name":"updateSession","description":"Updates the session with a resuming key and timeout.","params":[{"name":"sessionId","description":"The session to update","type":[[["string"]]]},{"name":"resumingKey","description":"The resuming key","type":[[["string"]]]},{"name":"timeout","description":"The timeout","type":[[["number"]]]},{"name":"trace","description":"Whether to include the trace","default":false,"type":[[["boolean"]]]}],"async":true,"returns":{"types":[[["RestSessionInfo"]]],"description":"The session info"},"meta":{"line":176,"file":"CosmiRest.js","path":"dist/lib"}},{"name":"loadTracks","description":"Loads a track","params":[{"name":"identifier","description":"The track identifier","type":[[["string"]]]}],"async":true,"returns":{"types":[[["RestTrackLoadResult"]]],"description":"The track load result"},"meta":{"line":187,"file":"CosmiRest.js","path":"dist/lib"}},{"name":"decodeTrack","description":"Decode a single track into its info, where BASE64 is the encoded base64 data.","params":[{"name":"base64","description":"The base64 data","type":[[["string"]]]},{"name":"trace","description":"Whether to include the trace","default":false,"type":[[["boolean"]]]}],"async":true,"returns":{"types":[[["RestTrackDecode"]]],"description":"The decoded track"},"meta":{"line":199,"file":"CosmiRest.js","path":"dist/lib"}},{"name":"decodeTracks","description":"Decode multiple tracks","params":[{"name":"trackData","description":"The track data","type":[[["Array","<"],["string",">"]]]},{"name":"trace","description":"Whether to include the trace","default":false,"type":[[["boolean"]]]}],"async":true,"returns":{"types":[[["Array","<"],["RestTrack",">"]]],"description":"The decoded tracks"},"meta":{"line":211,"file":"CosmiRest.js","path":"dist/lib"}},{"name":"getInfo","description":"Get lavalink info","params":[{"name":"trace","description":"Whether to include the trace","default":false,"type":[[["boolean"]]]}],"async":true,"returns":{"types":[[["RestInfo"]]],"description":"The info"},"meta":{"line":222,"file":"CosmiRest.js","path":"dist/lib"}},{"name":"getStats","description":"Get lavalink stats","params":[{"name":"trace","description":"Whether to include the trace","default":false,"type":[[["boolean"]]]}],"async":true,"returns":{"types":[[["RestLavalinkStats"]]],"description":"The stats"},"meta":{"line":233,"file":"CosmiRest.js","path":"dist/lib"}},{"name":"getVersion","description":"Get lavalink version","async":true,"returns":{"types":[[["string"]]],"description":"The version"},"meta":{"line":243,"file":"CosmiRest.js","path":"dist/lib"}}],"meta":{"line":28,"file":"CosmiRest.js","path":"dist/lib"}}],"interfaces":[],"typedefs":[],"externals":[]}